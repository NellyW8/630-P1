function y=fidft(x)

%Find the coefficiencies of DFT in 16 bit fixed-point number
dftcof=int16([32767;32728;32609;32412;32137;31785;31356;30852;30273;29621;28898;28105;27245;26319;25329;24279;23170;22005;20787;19519;18204;16846;15446;14010;12539;11039;9512;7962;6393;4808;3212;1608;0;-1608;-3212;-4808;-6393;-7962;-9512;-11039;-12539;-14010;-15446;-16846;-18204;-19519;-20787;-22005;-23170;-24279;-25329;-26319;-27245;-28105;-28898;-29621;-30273;-30852;-31356;-31785;-32137;-32412;-32609;-32728;-32767;-32728;-32609;-32412;-32137;-31785;-31356;-30852;-30273;-29621;-28898;-28105;-27245;-26319;-25329;-24279;-23170;-22005;-20787;-19519;-18204;-16846;-15446;-14010;-12539;-11039;-9512;-7962;-6393;-4808;-3212;-1608;0;1608;3212;4808;6393;7962;9512;11039;12539;14010;15446;16846;18204;19519;20787;22005;23170;24279;25329;26319;27245;28105;28898;29621;30273;30852;31356;31785;32137;32412;32609;32728]);
y=zeros(25,2,'int32');

for k=int16(5):int16(29)
    for m=int16(1):int16(128)
        if (mod((k-1)*(m-1),128))<=32
        local=ADD32(MUL16(x(m,1),dftcof(mod((k-1)*(m-1),128)+1,1)),MUL16(x(m,2),dftcof(33-mod((k-1)*(m-1),128),1)));
        local=SHIFT(local,15);
        y(k-4,1)=ADD32(y(k-4,1),local);
        elseif ((mod((k-1)*(m-1),128)<=64))&&((mod((k-1)*(m-1),128)>32))
        local=ADD32(MUL16(x(m,1),dftcof(mod((k-1)*(m-1),128)+1,1)),MUL16(x(m,2),-dftcof(97-mod((k-1)*(m-1),128),1)));
        local=SHIFT(local,15);
        y(k-4,1)=ADD32(y(k-4,1),local);
        elseif (mod((k-1)*(m-1),128)<=96)&&(mod((k-1)*(m-1),128)>64)
        local=ADD32(MUL16(x(m,1),dftcof(mod((k-1)*(m-1),128)+1,1)),MUL16(x(m,2),dftcof(161-mod((k-1)*(m-1),128),1)));
        local=SHIFT(local,15);
        y(k-4,1)=ADD32(y(k-4,1),local);
        else
        local=ADD32(MUL16(x(m,1),dftcof(mod((k-1)*(m-1),128)+1,1)),MUL16(x(m,2),-dftcof(225-mod((k-1)*(m-1),128),1)));
        local=SHIFT(local,15);
        y(k-4,1)=ADD32(y(k-4,1),local);
        end
    end
end

for k=int16(5):int16(29)
    for m=int16(1):int16(128)
        if (mod((k-1)*(m-1),128))<=32
        local=SUB32(MUL16(x(m,2),dftcof(mod((k-1)*(m-1),128)+1,1)),MUL16(x(m,1),dftcof(33-mod((k-1)*(m-1),128),1)));
        local=SHIFT(local,15);
        y(k-4,2)=ADD32(y(k-4,2),local);
        elseif (mod((k-1)*(m-1),128)<=64)&&(mod((k-1)*(m-1),128)>32)
        local=SUB32(MUL16(x(m,2),dftcof(mod((k-1)*(m-1),128)+1,1)),MUL16(x(m,1),-dftcof(97-mod((k-1)*(m-1),128),1)));
        local=SHIFT(local,15);
        y(k-4,2)=ADD32(y(k-4,2),local);
        elseif (mod((k-1)*(m-1),128)<=96)&&(mod((k-1)*(m-1),128)>64)
        local=SUB32(MUL16(x(m,2),dftcof(mod((k-1)*(m-1),128)+1,1)),MUL16(x(m,1),dftcof(161-mod((k-1)*(m-1),128),1)));
        local=SHIFT(local,15);
        y(k-4,2)=ADD32(y(k-4,2),local);
        else
        local=SUB32(MUL16(x(m,2),dftcof(mod((k-1)*(m-1),128)+1,1)),MUL16(x(m,1),-dftcof(225-mod((k-1)*(m-1),128),1)));
        local=SHIFT(local,15);
        y(k-4,2)=ADD32(y(k-4,2),local);
        end
    end
end